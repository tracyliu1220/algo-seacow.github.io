{"pages":[{"title":"About","text":"","link":"/about/index.html"}],"posts":[{"title":"test","text":"New Postto generate new post: 1hexo new post [title] Docker1docker-compose build build 會將 docker-compose.yml 中需要用 Dockerfile build 的 images 建立起來，建立好後用 docker images 的指令可以看到 1docker-compose up images 建立好後下這行，會將 container 們建立起來並用虛擬網路連接 1docker-compose up -d 這個功能同上，但是加了 -d 的選項就會在背景執行，也不會有 log 跑出來 1docker-compose down 移除 container 們以及虛擬網路 只有第一次要下 docker-compose build以後只要要用的時候 up 要關的時候 down 就好 Installation of DockerDocker: 執行這個並重新啟動docker-compose: 執行這個 Docker 要先！！","link":"/2020/09/22/2020-09-24-test/"},{"title":"Geometry","text":"計算幾何 基本操作 幾何模板123456789101112131415161718192021222324typedef double Double;struct Point { Double x,y; bool operator &lt; (const Point &amp;b)const{ // 比較 //return tie(x,y) &lt; tie(b.x,b.y); //return atan2(y,x) &lt; atan2(b.y,b.x); } Point operator + (const Point &amp;b)const{ // 向量加法 return (Point){x+b.x,y+b.y}; } Point operator - (const Point &amp;b)const{ // 向量減法 return (Point){x-b.x,y-b.y}; } Point operator * (const Double &amp;d)const{ // 向量伸縮 return Point(d*x,d*y); } Double operator * (const Point &amp;b)const{ // 向量內積 return x*b.x + y*b.y; } Double operator % (const Point &amp;b)const{ // 向量外積 return x*b.y - y*b.x; }}; 向量加法 $w = u+v$ 向量減法 $w = u-v$ 向量內積(dot) 藍色長度 x 綠色長度 向量外積(cross) - 有向面積 藍色長度 x 綠色長度 右手定則, 順時鐘為正, 逆時鐘為負 問題 點到直線的距離 兩個直線的交點 線段相交判定 簡單多邊形面積 問題 1 : 點到直線的距離 cross / 方向向量長度 問題 2 : 兩個直線的交點12345Point GetLineIntersection(Point P,Vector v,Point Q,Vector w){ Point u = P-Q; double t = Cross(w,u) / Cross(v,w); return P + v*t;} 問題 3 : 線段相交判定 利用直線求交點，判斷交點是否在線段上 滿足任三點不共線時? 問題 3 : 線段相交判定(cont.) 問題 3 : 線段相交判定(cont.) $sign(u\\times b) = sign(b\\times v)$ 問題 4 : 簡單多邊形面積 - 三角型 $| u \\times v | / 2$ 問題 4 : 簡單多邊形面積 - 凸多邊形 從頂點當原點三角剖分，三角形面積相加 問題 4 : 簡單多邊形面積 - 凸多邊形 內部選一個點當原點三角剖分，將三角形面積相加 問題 4 : 簡單多邊形面積 - 凸多邊形 任意選一個點當原點三角剖分，將三角形有向面積相加 圖中藍色是會被扣的，面積方向不同 問題 4 : 簡單多邊形面積 在簡單多邊形同樣成立!! 開心/ 判斷點在圖形內 圓形 圓形(cont.) 到圓心的距離小於等於 $r$ 矩形 (邊平行x軸,y軸) 矩形 (邊平行x軸,y軸)(cont.) x 座標在範圍內 y 座標在範圍內 三角形 三角形(cont.) 都在線的同一邊( cross 同號或為 0 ) 凸多邊形 凸多邊形內部 凸多邊形 凸多邊形邊上 凸多邊形(cont.) 凸包點照逆時針排好，cross 都大於等於 0 時間 $O(n)$ 多次查詢? 凸多邊形多次查詢 凸多邊形多次查詢(cont.) 將一個頂點當圓點, 三角剖分 二分搜尋極角 判斷是否在三角形內 每次 query $O(\\log n)$ 簡單多邊形 簡單多邊形 - 射線 簡單多邊形 - 射線 找射線，算線段交的次數 奇數次為內部 偶數次為外部 時間 $O(n)$ 簡單多邊形 - bug 簡單多邊形 - bug 簡單多邊形 - 解法 點在線段上可以直接判斷 若發生射線交於短點 重新 sample 一個射線，重新做 應該不用試太多次就行了 射線的斜率大於題目給的精度 不可能交於輸入範圍的點上 凸包 什麼是凸包? 把一堆點包住的最小凸多邊形 求出凸包 求出凸包 將點排序，先比 x 小的, x 相同時比 y 小的 用 vector 的 puhs_back(), pop_back() 實作一個 stack, 存凸包上的點 將排序好的點由小到大加入，如果跟 stack 頂端的兩個點會形成大於 180 度的角 (內凹)，刪掉 stack 頂端的點，重複直到不會有內凹的角 求出凸包 走到最右邊後，會得到下凸包 將點的順序由大而小再依序加入，可以完成上凸包 最後的 vector 就是凸包了 問題: 最遠點對 問題: 最遠點對 變形 凸包的 “寬度”，最遠距離最小 最大三角形 最大四邊形 最小的矩形包住所有點 增量法求凸包 增量法求凸包 如何找到要刪除的邊 一堆圓的凸包 - 圓等半徑 就是凸包 一堆圓的凸包 一堆圓的凸包 一堆圓的凸包 gift wrapping algorithm 不斷找最外側的公切線 半平面交 什麼是半平面? $y&gt;2x-3$ 形成的半平面 什麼是半平面交? 許多半平面的交集部分 定理: 凸多邊形的交集還是凸多邊形 Duality of lines and points $P( (a,b) ) = L: y=ax-b$ $P( L: y=ax-b ) = (a,b)$ https://pdfs.semanticscholar.org/810c/e0c19283481567c6545bf8c0cc8a4dcb8a1f.pdf Duality of lines and points $P( P( (a,b) ) ) = (a,b)$ 若 $p$ 在 $L$ 上方 $\\iff$ $P(L)$ 在 $P(p)$ 上方 $p$ 與 $L$ 的鉛直差距 $=$ $P(L)$ 與 $P(p)$ 的鉛直差距 upper/lower envelopes 凸包與 envelopes 凸包與 envelopes Voronoi Diagram 找到離自己最近的的 Voronoi Diagram 使用半平面交 跟其他點作中垂線，跟自己同側的半平面全部交集 聯集面積 矩形聯集面積 矩形聯集面積 掃描線 線段樹 圓形聯集面積 https://oi.abcdabcd987.com/ciru/ 模擬退火 最小包圍圓 2D 3D 蒙地卡羅","link":"/2020/10/14/2020-10-14-Geometry/"},{"title":"test math","text":"New Postto generate new post: 1hexo new post [title] testing[^1] [^1]: basic footnote content","link":"/2020/10/14/test_math/"}],"tags":[{"name":"tag1","slug":"tag1","link":"/tags/tag1/"},{"name":"tag2","slug":"tag2","link":"/tags/tag2/"}],"categories":[{"name":"catg1","slug":"catg1","link":"/categories/catg1/"},{"name":"catg2","slug":"catg1/catg2","link":"/categories/catg1/catg2/"}]}